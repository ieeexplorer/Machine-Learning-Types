from sklearn.cluster import KMeans
from sklearn.datasets import make_blobs
import matplotlib.pyplot as plt

# Generate sample customer data (unlabeled)
np.random.seed(42)
X, true_labels = make_blobs(n_samples=300, centers=4, cluster_std=0.60, random_state=0)

# Convert to DataFrame for clarity
customer_data = pd.DataFrame(X, columns=['Annual_Income', 'Spending_Score'])
print("UNLABELED CUSTOMER DATA:")
print(customer_data.head())
print("\nNote: We don't know customer segments in advance!")

# Apply K-Means clustering
kmeans = KMeans(n_clusters=4, random_state=42)
clusters = kmeans.fit_predict(customer_data)  # NO LABELS USED!

# Add clusters to dataframe
customer_data['Cluster'] = clusters

print("\nCLUSTERING RESULTS:")
print(customer_data.head())

# Visualize the clusters
plt.figure(figsize=(12, 5))

plt.subplot(1, 2, 1)
plt.scatter(customer_data['Annual_Income'], customer_data['Spending_Score'], 
           c=true_labels, cmap='viridis')
plt.title('True Customer Segments (Unknown in Real World)')
plt.xlabel('Annual Income')
plt.ylabel('Spending Score')

plt.subplot(1, 2, 2)
plt.scatter(customer_data['Annual_Income'], customer_data['Spending_Score'], 
           c=customer_data['Cluster'], cmap='viridis')
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], 
           marker='X', s=200, c='red', label='Centroids')
plt.title('Discovered Customer Segments (K-Means)')
plt.xlabel('Annual Income')
plt.ylabel('Spending Score')
plt.legend()

plt.tight_layout()
plt.show()

# Interpret clusters
print(f"\nCluster Centers (Typical Customer Profiles):")
for i, center in enumerate(kmeans.cluster_centers_):
    print(f"Cluster {i}: Income={center[0]:.2f}, Spending={center[1]:.2f}")
